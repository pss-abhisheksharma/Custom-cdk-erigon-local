package smt_test

import (
	"context"
	"fmt"
	"testing"

	"github.com/ledgerwatch/erigon/smt/pkg/smt"
	"github.com/ledgerwatch/erigon/smt/pkg/utils"
	"gotest.tools/v3/assert"
)

func TestBatchWitness(t *testing.T) {
	keys := []utils.NodeKey{
		utils.NodeKey{17822804428864912231, 4683868963463720294, 2947512351908939790, 2330225637707749973},
		utils.NodeKey{15928606457751385034, 926210564408807848, 3634217732472610234, 18021748560357139965},
		utils.NodeKey{1623861826376204094, 570263533561698889, 4654109133431364496, 7281957057362652730},
		utils.NodeKey{13644513224119225920, 15807577943241006501, 9942496498562648573, 15190659753926523377},
		utils.NodeKey{9275812266666786730, 4204572028245381139, 3605834086260069958, 10007478335141208804},
		utils.NodeKey{8235907590678154663, 6691762687086189695, 15487167600723075149, 10984821506434298343},
		utils.NodeKey{16417603439618455829, 5362127645905990998, 10661203900902368419, 16076124886006448905},
		utils.NodeKey{11707747219427568787, 933117036015558858, 16439357349021750126, 14064521656451211675},
		utils.NodeKey{10768458483543229763, 12393104588695647110, 7306859896719697582, 4178785141502415085},
		utils.NodeKey{7512520260500009967, 3751662918911081259, 9113133324668552163, 12072005766952080289},
		utils.NodeKey{9944065905482556519, 8594459084728876791, 17786637052462706859, 15521772847998069525},
		utils.NodeKey{5036431633232956882, 16658186702978753823, 2870215478624537606, 11907126160741124846},
		utils.NodeKey{17938814940856978076, 13147879352039549979, 1303554763666506875, 14953772317105337015},
		utils.NodeKey{17398863357602626404, 4841219907503399295, 2992012704517273588, 16471435007473943078},
		utils.NodeKey{4763654225644445738, 5354841943603308259, 16476366216865814029, 10492509060169249179},
		utils.NodeKey{3554925909441560661, 16583852156861238748, 15693104712527552035, 8799937559790156794},
		utils.NodeKey{9617343367546549815, 6562355304138083186, 4016039301486039807, 10864657160754550133},
		utils.NodeKey{17933907347870222658, 16190350511466382228, 13330881818854499962, 1410294862891786839},
		utils.NodeKey{17260204906255015513, 15380909239227623493, 8567606678138088594, 4899143890802672405},
		utils.NodeKey{12539511585850227228, 3973200204826286539, 8108069613182344498, 11385621942985713904},
		utils.NodeKey{5984161349947667925, 7514232801604484380, 16331057190188025237, 2178913139230121631},
		utils.NodeKey{1993407781442332939, 1513605408256072860, 9533711780544200094, 4407755968940168245},
		utils.NodeKey{10660689026092155967, 7772873226204509526, 940412750970337957, 11934396459574454979},
		utils.NodeKey{13517500090161376813, 3430655983873553997, 5375259408796912397, 1582918923617071297},
		utils.NodeKey{1530581473737529386, 12702896566116465736, 5914767264290477911, 17646414071976395527},
		utils.NodeKey{16058468518382574435, 17573595348125839734, 14299084025723850432, 9173086175977268459},
		utils.NodeKey{3492167051156683621, 5113280701490269535, 3519293511105800335, 4519124618482063071},
		utils.NodeKey{18174025977752953446, 170880634573707059, 1420648486923115869, 7650935848186468717},
		utils.NodeKey{16208859541132551432, 6618660032536205153, 10385910322459208315, 8083618043937979883},
		utils.NodeKey{18055381843795531980, 13462709273291510955, 680380512647919587, 11342529403284590651},
		utils.NodeKey{14208409806025064162, 3405833321788641051, 10002545051615441056, 3286956713137532874},
		utils.NodeKey{5680425176740212736, 8706205589048866541, 1439054882559309464, 17935966873927915285},
		utils.NodeKey{110533614413158858, 1569162572987050699, 17606018854685897411, 14063722484766563720},
		utils.NodeKey{11233753640608616570, 12359586935502800882, 9900310098552340970, 2424696158120948624},
		utils.NodeKey{17470957289258137535, 89496548814733839, 13431046055752824170, 4863600257776330164},
		utils.NodeKey{12096080439449907754, 3586504186348650027, 16024032131582461863, 3698791599656620348},
		utils.NodeKey{12011265607191854676, 16995709771660398040, 10097323095148987140, 5271835541457063617},
		utils.NodeKey{13774341565485367328, 12574592232097177017, 13203533943886016969, 15689605306663468445},
		utils.NodeKey{17673889518692219847, 6954332541823247394, 954524149166700463, 10005323665613190430},
		utils.NodeKey{3390665384912132081, 273113266583762518, 15391923996500582086, 16937300536792272468},
		utils.NodeKey{3282365570547600329, 2269401659256178523, 12133143125482037239, 9431318293795439322},
		utils.NodeKey{10308056630015396434, 9302651503878791339, 1753436441509383136, 12655301298828119054},
		utils.NodeKey{4866095004323601391, 7715812469294898395, 13448442241363136994, 12560331541471347748},
		utils.NodeKey{9555357893875481640, 14044231432423634485, 2076021859364793876, 2098251167883986095},
		utils.NodeKey{13166561572768359955, 8774399027495495913, 17115924986198600732, 14679213838814779978},
		utils.NodeKey{1830856192880052688, 16817835989594317540, 6792141515706996611, 13263912888227522233},
		utils.NodeKey{8580776493878106180, 13275268150083925070, 1298114825004489111, 6818033484593972896},
		utils.NodeKey{2562799672200229655, 18444468184514201072, 17883941549041529369, 4070387813552736545},
		utils.NodeKey{9268691730026813326, 11545055880246569979, 1187823334319829775, 17259421874098825958},
		utils.NodeKey{9994578653598857505, 13890799434279521010, 6971431511534499255, 9998397274436059169},
		utils.NodeKey{18287575540870662480, 11943532407729972209, 15340299232888708073, 10838674117466297196},
		utils.NodeKey{14761821088000158583, 964796443048506502, 5721781221240658401, 13211032425907534953},
		utils.NodeKey{18144880475727242601, 4972225809077124674, 14334455111087919063, 8111397810232896953},
		utils.NodeKey{16933784929062172058, 9574268379822183272, 4944644580885359493, 3289128208877342006},
		utils.NodeKey{8619895206600224966, 15003370087833528133, 8252241585179054714, 9201580897217580981},
		utils.NodeKey{16332458695522739594, 7936008380823170261, 1848556403564669799, 17993420240804923523},
		utils.NodeKey{6515233280772008301, 4313177990083710387, 4012549955023285042, 12696650320500651942},
		utils.NodeKey{6070193153822371132, 14833198544694594099, 8041604520195724295, 569408677969141468},
		utils.NodeKey{18121124933744588643, 14019823252026845797, 497098216249706813, 14507670067050817524},
		utils.NodeKey{10768458483543229763, 12393104588695647110, 7306859896719697582, 4178785141502415085},
		utils.NodeKey{7512520260500009967, 3751662918911081259, 9113133324668552163, 12072005766952080289},
		utils.NodeKey{5911840277575969690, 14631288768946722660, 9289463458792995190, 11361263549285604206},
		utils.NodeKey{5112807231234019664, 3952289862952962911, 12826043220050158925, 4455878876833215993},
		utils.NodeKey{16417603439618455829, 5362127645905990998, 10661203900902368419, 16076124886006448905},
		utils.NodeKey{11707747219427568787, 933117036015558858, 16439357349021750126, 14064521656451211675},
		utils.NodeKey{16208859541132551432, 6618660032536205153, 10385910322459208315, 8083618043937979883},
		utils.NodeKey{18055381843795531980, 13462709273291510955, 680380512647919587, 11342529403284590651},
		utils.NodeKey{2562799672200229655, 18444468184514201072, 17883941549041529369, 4070387813552736545},
		utils.NodeKey{16339509425341743973, 7562720126843377837, 6087776866015284100, 13287333209707648581},
		utils.NodeKey{1830856192880052688, 16817835989594317540, 6792141515706996611, 13263912888227522233},
	}

	valuesTemp := [][8]uint64{
		[8]uint64{0, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{1, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{0, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{1, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{0, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{1, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{2802548736, 3113182143, 10842021, 0, 0, 0, 0, 0},
		[8]uint64{1, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{0, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{0, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{552894464, 46566, 0, 0, 0, 0, 0, 0},
		[8]uint64{1, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{0, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{1, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{0, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{4, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{0, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{8, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{0, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{1, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{0, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{1, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{92883624, 129402807, 3239216982, 1921492768, 41803744, 3662741242, 922499619, 611206845},
		[8]uint64{2149, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{1220686685, 2241513088, 3059933278, 877008478, 3450374550, 2577819195, 3646855908, 1714882695},
		[8]uint64{433, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{1807748760, 2873297298, 945201229, 411604167, 1063664423, 1763702642, 2637524917, 1284041408},
		[8]uint64{2112, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{2407450438, 2021315520, 3591671307, 1981785129, 893348094, 802675915, 3804752326, 2006944699},
		[8]uint64{2583, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{1400751902, 190749285, 93436423, 2918498711, 3630577401, 3928294404, 1037307865, 2336717508},
		[8]uint64{10043, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{2040622618, 1654767043, 2359080366, 3993652948, 2990917507, 41202511, 3266270425, 2537679611},
		[8]uint64{2971, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{2958032465, 981708138, 2081777150, 750201226, 3046928486, 2765783602, 2851559840, 1406574120},
		[8]uint64{23683, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{1741943335, 1540916232, 1327285029, 2450002482, 2695899944, 0, 0, 0},
		[8]uint64{3109587049, 2273239893, 220080300, 1823520391, 35937659, 0, 0, 0},
		[8]uint64{1677672755, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{337379899, 3225725520, 234013414, 1425864754, 2013026225, 0, 0, 0},
		[8]uint64{1031512883, 3743101878, 2828268606, 2468973124, 1081703471, 0, 0, 0},
		[8]uint64{1, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{256, 481884672, 2932392155, 111365737, 1511099657, 224351860, 164, 0},
		[8]uint64{632216695, 2300948800, 3904328458, 2148496278, 971473112, 0, 0, 0},
		[8]uint64{1031512883, 3743101878, 2828268606, 2468973124, 1081703471, 0, 0, 0},
		[8]uint64{4, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{1, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{1, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{2401446452, 1128446136, 4183588423, 3903755242, 16083787, 848717237, 2276372267, 2020002041},
		[8]uint64{2793696421, 3373683791, 3597304417, 3609426094, 2371386802, 1021540367, 828590482, 1599660962},
		[8]uint64{2793696421, 3373683791, 3597304417, 3609426094, 2371386802, 1021540367, 828590482, 1599660962},
		[8]uint64{1, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{1, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{1, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{2793696421, 3373683791, 3597304417, 3609426094, 2371386802, 1021540367, 828590482, 1599660962},
		[8]uint64{2793696421, 3373683791, 3597304417, 3609426094, 2371386802, 1021540367, 828590482, 1599660962},
		[8]uint64{86400, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{1, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{1, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{0, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{0, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{1321730048, 465661287, 0, 0, 0, 0, 0, 0},
		[8]uint64{1, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{1480818688, 2647520856, 10842021, 0, 0, 0, 0, 0},
		[8]uint64{1, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{2407450438, 2021315520, 3591671307, 1981785129, 893348094, 802675915, 3804752326, 2006944699},
		[8]uint64{2583, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{2, 0, 0, 0, 0, 0, 0, 0},
		[8]uint64{4210873971, 1869123984, 4035019538, 1823911763, 1097145772, 827956438, 819220988, 1111695650},
		[8]uint64{20, 0, 0, 0, 0, 0, 0, 0},
	}

	values := make([]utils.NodeValue8, 0)
	for _, vT := range valuesTemp {
		values = append(values, utils.NodeValue8{
			vT[0],
			vT[1],
			vT[2],
			vT[3],
			vT[4],
			vT[5],
			vT[6],
			vT[7],
		})
	}

	smtIncremental := smt.NewSMT(nil, false)
	smtBatch := smt.NewSMT(nil, false)
	insertBatchCfg := smt.NewInsertBatchConfig(context.Background(), "", false)
	for i, k := range keys {
		smtIncremental.Insert(k, values[i])
		_, err := smtBatch.InsertBatch(insertBatchCfg, []*utils.NodeKey{&k}, []*utils.NodeValue8{&values[i]}, nil, nil)
		assert.NilError(t, err)

		smtIncrementalRootHash, _ := smtIncremental.Db.GetLastRoot()
		smtBatchRootHash, _ := smtBatch.Db.GetLastRoot()
		assert.Equal(t, utils.ConvertBigIntToHex(smtBatchRootHash), utils.ConvertBigIntToHex(smtIncrementalRootHash))
	}

	smtIncremental.DumpTree()
	fmt.Println()
	smtBatch.DumpTree()
	fmt.Println()

	assertSmtDbStructure(t, smtBatch, false)
}
